# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Contributor: Jeff Han <hanjinfei@foxmail.com>,duanjf <605126199@qq.com>
# Maintainer: Jeff Han <hanjinfei@foxmail.com>

pkgname=libkate
pkgver=distrotech-libkate-0.4.1
pkgrel=0
pkgdesc="libkate is an open source library for working with Kate stream metadata."
url="https://github.com/Distrotech/libkate"
archs=("arm64-v8a")
license=("BSD-3-Clause")
depends=()
makedepends=("automake" "autoconf")
source="https://github.com/Distrotech/$pkgname/archive/refs/tags/$pkgver.zip"

downloadpackage=true
autounpack=true
buildtools="configure"

source envset.sh
host=
automakeVersion=
builddir=$pkgname-${pkgver}
packagename=$builddir.zip

prepare() {
    cp -rf $builddir $pkgname-$ARCH-build
    if [ $ARCH == "armeabi-v7a" ]
    then
        setarm32ENV
        host=arm-linux
    fi
    if [ $ARCH == "arm64-v8a" ]
    then
        setarm64ENV
        host=aarch64-linux
    fi   
    cd $pkgname-$ARCH-build
    #获取到automake的版本号
    automakeVersion=$(automake --version | awk '/^automake \(GNU automake\) / {split($NF, a, "."); print a[1] "." a[2]}')
    sed -i.bak "s/^am__api_version=.*/am__api_version='${automakeVersion}'/" configure
    #原库automake写死了，换了版本后warning太多，去掉-Werror
    sed -i.bak '/AM_INIT_AUTOMAKE(\[-Wall -Werror foreign subdir-objects\])/c\AM_INIT_AUTOMAKE([-Wall foreign subdir-objects])' configure.ac
    cd ${OLDPWD}
}

build() {
    cd $pkgname-$ARCH-build 
    ./autogen.sh "$@" --host=$host > $buildlog 2>&1
    ${MAKE} >> $buildlog 2>&1
    ret=$?
    cd $OLDPWD
    return $ret
}

package() {
    cd $pkgname-$ARCH-build
    ${MAKE} install >> $build.log 2>&1
    ret=$?
    cd $OLDPWD
    if [ $ARCH == "armeabi-v7a" ]
    then
        unsetarm32ENV
    elif [ $ARCH == "arm64-v8a" ]
    then
        unsetarm64ENV
    else
        echo "${ARCH} not support"
        return -1
    fi
    unset host
    return $ret
}

check() { 
    echo "The test must be on an OpenHarmony device!"
    #替换测试文件中sed的路径
    cd $pkgname-$ARCH-build/tests
    for file in check_sizes language metadata overflow text; do
        sed -i.bak 's|/usr/bin/sed|/bin/sed|g' "$file"
    done
    #注释掉测试的编译阶段
    sed -i.bak '/^all: all-am$/,/^\t@:$/s/^/#/' Makefile
    cd $OLDPWD
    #修改libtool中SED的路径
    cd $pkgname-$ARCH-build
    sed -i.bak 's|/usr/bin/sed|/bin/sed|g' libtool
    sed -i.bak 's|/usr/bin/grep|/bin/grep|g' libtool
    sed -i.bak 's|/usr/bin/grep -E|bin/grep -E|g' libtool
    sed -i.bak 's|/usr/bin/grep -F|bin/grep -F|g' libtool
    cd $OLDPWD
    #复制test-driver工具
    cd $pkgname-$ARCH-build/misc/autotools   
    cp -p "$(readlink test-driver)" ../
    rm test-driver
    cp -p ../test-driver .
    rm ../test-driver
    cd $OLDPWD
}

# 清理环境
cleanbuild() {
    rm -rf ${PWD}/$builddir ${PWD}/$pkgname-armeabi-v7a-build ${PWD}/$pkgname-arm64-v8a-build
}