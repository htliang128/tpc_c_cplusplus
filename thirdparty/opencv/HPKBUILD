# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

# Contributor: Jeff Han <hanjinfei@foxmail.com>,luozhu <luozhu2@h-partners.com>
# Maintainer: Jeff Han <hanjinfei@foxmail.com>

pkgname=opencv
pkgver=4.8.0
pkgrel=0
pkgdesc="OpenCV (Open Source Computer Vision Library) is an open source computer vision and machine learning software library."
url="https://github.com/opencv/opencv"
archs=("arm64-v8a")
license=("Apache License 2.0")
depends=()
makedepends=()

# source="https://github.com/opencv/$pkgname/archive/refs/tags/$pkgver.tar.gz"
source="https://gitee.com/lycium_pkg_mirror/$pkgname/repository/archive/$pkgver.zip"

autounpack=true
downloadpackage=true
patchflag=true

builddir=$pkgname-${pkgver}
# packagename=$builddir.tar.gz
packagename=$pkgver.zip
test_data_name=opencv_extra
test_data_version=4.8.1
test_data=$test_data_name-$test_data_version
testresdownloadflag=true

prepare() {
    if [ $patchflag == true ];then
        cd $builddir
        # imgproc测试用例因浮点数精度问题失败，打patch扩大误差允许范围
        patch -p1 < `pwd`/../opencv_oh_test.patch > $publicbuildlog 2>&1
        # patch只需要打一次,关闭打patch
        patchflag=false
        cd $OLDPWD
    fi

    if [ $testresdownloadflag == true ];then
        cd $builddir
        # 下载opencv测试资源
        wget -O $test_data.tar.gz -c https://github.com/$pkgname/$test_data_name/archive/refs/tags/$test_data_version.tar.gz >> $publicbuildlog 2>&1
        if [ $? -ne 0 ];then
        echo "Download failed"
        return -1
        fi
        tar xf opencv_extra-4.8.1.tar.gz
        cd $OLDPWD
        testresdownloadflag=false
    fi
    
    mkdir -p $builddir/$ARCH-build
}

build() {
    cd $builddir
    ${OHOS_SDK}/native/build-tools/cmake/bin/cmake "$@" -DBUILD_PERF_TESTS=ON -DBUILD_TESTS=ON \
        -DINSTALL_TESTS=ON -DCMAKE_C_FLAGS="-fvisibility=default" -DCMAKE_CXX_FLAGS="-fvisibility=default" \
        -DENABLE_NEON=OFF -DOPENCV_TEST_DATA_PATH=./$test_data/testdata \
        -B$ARCH-build -S./ > $buildlog 2>&1
    $MAKE -C $ARCH-build VERBOSE=1 >> $buildlog 2>&1
    ret=$?
    cd $OLDPWD
    return $ret
}

package() {
    cd $builddir
    $MAKE -C $ARCH-build install >> $buildlog 2>&1
    cd $OLDPWD
}

check() {
    cd $builddir/$ARCH-build/unix-install
    # 修改opencv_run_all_tests.sh中测试资源文件的路径，添加判断语句屏蔽opencv_test_highgui
    sed -i -e "s|OPENCV_TEST_DATA_PATH=.*|OPENCV_TEST_DATA_PATH=$PKGBUILD_ROOT/$builddir/$test_data/testdata/|g" opencv_run_all_tests.sh
    sed -i '/cmd="$t --perf_min_samples=1/i\\    if [[ $test_name == "opencv_test_highgui" ]];then \
        continue; \
        fi' opencv_run_all_tests.sh
    cd $OLDPWD
    if [ $ARCH == "armeabi-v7a" ]
    then
        cp ${OHOS_SDK}/native/llvm/lib/arm-linux-ohos/libc++_shared.so $LYCIUM_ROOT/usr/$pkgname/$ARCH/lib/
    elif [ $ARCH == "arm64-v8a" ]
    then
        cp ${OHOS_SDK}/native/llvm/lib/aarch64-linux-ohos/libc++_shared.so $LYCIUM_ROOT/usr/$pkgname/$ARCH/lib/
    else
        echo "${ARCH} not support"
        return -1
    fi
    echo "The test must be on an OpenHarmony device!"
    # real test CMD
    # ./opencv_run_all_tests.sh
    # opencv_perf_gapih和opencv_test_gapi测试不通过，问题还在解决中
}

# 清理环境
cleanbuild(){
    rm -rf ${PWD}/$builddir #${PWD}/$packagename
}

