# Contributor: zhangxin <zhangxin546@h-partners.com>
# Maintainer: zhangxin <zhangxin546@h-partners.com>
pkgname=FFmpeg-ff4.0
pkgver=ijk0.8.8-20210426-001
pkgrel=0
pkgdesc="FFmpeg is a collection of libraries and tools to process multimedia content such as audio, video, subtitles and related metadata."
url="https://github.com/bilibili/FFmpeg/"
archs=("arm64-v8a")
license=("GPL2 or later" "LGPL2.1 or later" "MIT" "X11" "BSD-styl")
depends=("openssl")
makedepends=()
source="https://github.com/bilibili/FFmpeg/archive/refs/tags/ff4.0--ijk0.8.8--20210426--001.tar.gz"

autounpack=false
downloadpackage=true
buildtools="configure"

builddir=$pkgname-${pkgver}
packagename=$builddir.tar.gz
patchflag=true
source envset.sh
arch=
ldflags=

prepare() {
    mkdir $pkgname-$ARCH-build
    tar -zxf $packagename -C $pkgname-$ARCH-build

    if $patchflag
    then
        cd $pkgname-$ARCH-build/$builddir
        # fix bug
        patch -p1 < `pwd`/../../oh_ffmpeg-bug-fixed.patch
        patchflag=false
        cd $OLDPWD
    fi
    
    if [ $ARCH == "armeabi-v7a" ]
    then
        setarm32ENV
        arch=arm
        ldflags="-L${OHOS_SDK}/native/sysroot/usr/lib/arm-linux-ohos"
    elif [ $ARCH == "arm64-v8a" ]
    then
        setarm64ENV
        arch=aarch64
        ldflags="-L${OHOS_SDK}/native/sysroot/usr/lib/aarch64-linux-ohos"
    else
        echo "${ARCH} not support"
        return -1
    fi
    export CFLAGS="-Wno-int-conversion -fPIC $CFLAGS"
    export CXXFLAGS="-Wno-int-conversion -fPIC $CXXFLAGS"
    return $ret
}

build() {
    cd $pkgname-$ARCH-build/$builddir
    PKG_CONFIG_LIBDIR="${pkgconfigpath}" ./configure "$@" --enable-neon --enable-asm --enable-network \
    --enable-cross-compile --disable-x86asm --enable-openssl --enable-protocols \
    --disable-programs --enable-static --disable-shared --disable-doc --disable-htmlpages --target-os=linux --arch=$arch \
    --cc=${CC} --ld=${CC} --strip=${STRIP} --sysroot=${OHOS_SDK}/native/sysroot > $buildlog 2>&1
    $MAKE >> $buildlog 2>&1
    ret=$?
    cd $OLDPWD
    return $ret
}

package() {
    cd $pkgname-$ARCH-build/$builddir
    $MAKE install >> $buildlog 2>&1
    cd $OLDPWD
}

check() {
    return 0
}

recoverpkgbuildenv() {
    unset arch
    unset ldflags
    if [ $ARCH == "armeabi-v7a" ]
    then
        unsetarm32ENV
    elif [ $ARCH == "arm64-v8a" ]
    then
        unsetarm64ENV
    else
        echo "${ARCH} not support"
        return -1
    fi
}

# 清理环境
cleanbuild() {
   rm -rf ${PWD}/${builddir} ${PWD}/$pkgname-arm64-v8a-build ${PWD}/$pkgname-armeabi-v7a-build #${PWD}/$packagename
}
